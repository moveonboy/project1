function  [peaktotalarea,numisotopicenvelope,everypeak]= findisopeakarea(md,isomd,peaklist,pfwhh,relativeabundance)
otherisomd = creatstruct(isomd);
eqnindex   = '';
eqnarea    = [];
num        =0;

mz   = md(:,1);
dist = md(:,2);

isotopicmz   = mz(1,1);
isotopicdist = dist(1,1);

isotopicindex   = findclosetpeak(isotopicmz,peaklist);
expisotopicpeak = peaklist(isotopicindex,1);
%disp(expisotopicpeak);

if(isempty(isotopicindex))  % if the isotopic mass is not found, use most aboundant mass
    mostabtmz       = mz(2,1);  % default: the second peak as default
    counter         = 0;
    otherisomdindex = '';
    for i = 1 : length(otherisomd)
        ithisomd                   = otherisomd(i);
        otherisomdindex{counter+1} = findclosetmz(mostabtmz,ithisomd);
        counter                    = counter+1;
    end
    eqnindex{num+1}     = otherisomdindex;
    num                 = num+1;
    isotopicindex       = findclosetpeak(mostabtmz,peaklist);
    startithpos         = 3;
else
    counter         = 0;
    otherisomdindex = '';
    for i = 1 : length(otherisomd)
        ithisomd                   = otherisomd(i);
        otherisomdindex{counter+1} = findclosetmz(isotopicmz,ithisomd);
        counter                    = counter+1;
    end
    eqnindex{num+1}     = otherisomdindex;
    num                 = num+1;
    startithpos         = 2;
end

if(isempty(isotopicindex))
   peaktotalarea    = 0;
   numisotopicenvelope = 0;
   return 
end


isotopicindexarea = abs(pfwhh(isotopicindex,1)-pfwhh(isotopicindex,2))...
    *peaklist(isotopicindex,2);
eqnarea(num) = isotopicindexarea;

if(length(isotopicindex)~=1)
    error('ms data not right');
end

% peaktotalarea =isotopicindexarea;
numisotopicenvelope = 0;

selectedpeak = [isotopicindex];

numisopeakconsidered = 6;
for i = startithpos : numisopeakconsidered
    otherpeakmz        = mz(i,1);
    otherdist          = dist(i,1);
    
    checkpeakmz        = abs(peaklist(:,1)-otherpeakmz)<0.5;
    peakindex          = find(checkpeakmz);
    
    if(peakindex==isotopicindex)
        continue;
    end
    
    if(length(find(~(peakindex-selectedpeak)))>1)
        continue;
    end
    
    
    if(isempty(peakindex))
        continue;
    end
    
    counter         = 0;
    otherisomdindex = '';
    for j = 1 : length(otherisomd)
        ithisomd                   = otherisomd(j);
        otherisomdindex{counter+1} = findclosetmz(otherpeakmz,ithisomd);
        counter                    = counter+1;
    end
    eqnindex{num+1} = otherisomdindex;
    num             = num+1;
    numpeaks        = length(peakindex);
    peakindexarea   =0;
    
    for j=1:numpeaks
        singlepeak    = peakindex(j,1);
        peakindexarea = peakindexarea+ abs(pfwhh(singlepeak,1)-pfwhh(singlepeak,2))...
            *peaklist(singlepeak,2);
    end
    
    eqnarea(num)     = peakindexarea;
    numisotopicenvelope = numisotopicenvelope+1;
end
[peaktotalarea,everypeak] = solveforabundance(md,otherisomd,eqnindex,eqnarea,relativeabundance);

end

function isotopicindex = findclosetpeak(isotopicmz,peaklist)
checkisotopicmz = abs(peaklist(:,1)-isotopicmz)<0.99;
isotopicindex   = find(checkisotopicmz);

 % if multiple peaks are found close to isotopic mass, select the closet peak as the match
if(length(isotopicindex)>1) 
        isotopicmzsdif         = abs(peaklist(checkisotopicmz)-isotopicmz);
        isotopicmultipleindex  = find(checkisotopicmz);
        isotopicnewindex       = find(~abs(isotopicmzsdif-min(isotopicmzsdif)));
        isotopicindex          = isotopicmultipleindex(isotopicnewindex);
end

end

function isotopicmd = creatstruct(isotopicmwarray)
isotopicmd = struct('isomwarray',[],'name',[]);
counter    = 0;
for i = 1 : length(isotopicmwarray)
    ithmwarray                       = isotopicmwarray{i};
    isotopicmd(counter+1).isomwarray = ithmwarray;
    isotopicmd(counter+1).name       = ['x' num2str(i+1)];
    counter                          = counter+1;
end
end

function otherisomdindex = findclosetmz(isotopicmz,otherisomd)
otherisomdindex = struct('isomd',[],'index',[],'objindex',[]);
intmz           = round(isotopicmz);
counter         = 0;
isempty         = 1;
for j = 1 : length(otherisomd.isomwarray)
    jthmz    = otherisomd.isomwarray(j,1);
    intkthmz = round(jthmz);
    if(intmz==intkthmz)
        isempty                             = 0;
        otherisomdindex(counter+1).isomd    = otherisomd.name;
        otherisomdindex(counter+1).index    = j;
        counter                             = counter+1;
    end
end
if(isempty)
    otherisomdindex = [];
end
end

function [peaktotalarea,everypeak] = solveforabundance(md,otherisomd,eqnindex,eqnarea,relativeabundance)
dist             = md(:,2);
if(length(otherisomd)==1)
    overlappingindex = [];
    counter          = 0;
    otherdist        = otherisomd.isomwarray(:,2);
    for i = 1 : length(eqnindex)
        ithmd         = eqnindex{i};
        for j = 1 : length(ithmd)
            jthothermd = ithmd{j};
            if(~size(jthothermd,1)==0)
                overlappingindex(counter+1) = i;
                counter                     = counter+1;
            end
        end
    end
    
    isoverlap = (overlappingindex(1)==1);
    if(~isoverlap)
        peakareaforfive = 0;
        peakdistforfive = 0;
        for i = 1 : overlappingindex(1)-1
            peakareaforfive = peakareaforfive+eqnarea(i);
            peakdistforfive = peakdistforfive+dist(i);
        end
        peaktotalarea   = peakareaforfive/peakdistforfive;
    else
        peakareaforfive     = 0;
        for i = 1 : length(eqnarea)
            peakareaforfive = peakareaforfive+eqnarea(i);
        end
        lastindex        = length(relativeabundance);
        try
            otherconc        = relativeabundance(lastindex);
        catch err
            debug
        end
        for i = 1 : length(eqnindex)
            otherindex    = eqnindex{i}{1,1}.index;
            peakareaforfive = peakareaforfive-otherconc*otherdist(otherindex);
        end
        if(peakareaforfive<0)
            peaktotalarea = 0;
        else
            peaktotalarea = peakareaforfive;
        end
    end
elseif(length(otherisomd)==2)
    otherisomd1 = otherisomd(1);
    otherisomd2 = otherisomd(2);
    overlappingindex1 = [];
    overlappingindex2 = [];
    counter1          = 0;
    counter2          = 0;
    otherdist1        = otherisomd1.isomwarray(:,2);
    otherdist2        = otherisomd2.isomwarray(:,2);
    for i = 1 : length(eqnindex)
        ithmd         = eqnindex{i}{1,1};
        if(~isempty(ithmd))
            overlappingindex1(counter1+1) = i;
            counter1                      = counter1+1;
        end
    end
    
    for i = 1 : length(eqnindex)
        ithmd         = eqnindex{i}{1,2};
        if(~isempty(ithmd))
            overlappingindex2(counter2+1) = i;
            counter2                      = counter2+1;
        end
    end
    
    if(overlappingindex1(1)~=1)&&(overlappingindex2(1)~=1)
        firstoverlappeak = min(overlappingindex1(1),overlappingindex2(1));
        peakareaforfive = 0;
        peakdistforfive = 0;
        for  i = 1 : firstoverlappeak-1
            peakareaforfive = peakareaforfive+eqnarea(i);
            peakdistforfive = peakdistforfive+dist(i);
        end
        peaktotalarea   = peakareaforfive/peakdistforfive;
    elseif((overlappingindex1(1)==1)&&(overlappingindex2(1)~=1))
        lastindex        = length(relativeabundance);
        otherconc        = relativeabundance(lastindex);
        peakareaforfive = 0;
        peakdistforfive = 0;
        for i = 1 : overlappingindex2(1)-1
            otherindex       = eqnindex{i}{1,1}.index;
            peakareaforother = otherconc*otherdist1(otherindex);
            peakareaforfive  = peakareaforfive+eqnarea(i)-peakareaforother;
            peakdistforfive  = peakdistforfive+dist(i);
        end
        if(peakareaforfive<0)
            peaktotalarea = 0;
        else
            peaktotalarea = peakareaforfive/peakdistforfive;
        end
    elseif((overlappingindex1(1)==1)&&(overlappingindex2(1)==1))
        peakareaforfive     = 0;
        for i = 1 : length(eqnarea)
            peakareaforfive = peakareaforfive+eqnarea(i);
        end
        lastindex1        = length(relativeabundance)-1;
        otherconc1        = relativeabundance(lastindex1);
        for i = 1 : length(eqnindex)
            otherindex1    = eqnindex{i}{1,1}.index;
            peakareaforfive = peakareaforfive-otherconc1*otherdist1(otherindex1);
        end
        lastindex2        = length(relativeabundance);
        otherconc2        = relativeabundance(lastindex2);
        for i = 1 : length(eqnindex)
            otherindex2    = eqnindex{i}{1,2}.index;
            peakareaforfive = peakareaforfive-otherconc2*otherdist2(otherindex2);
        end
        if(peakareaforfive<0)
            peaktotalarea = 0;
        else
            peaktotalarea = peakareaforfive;
        end
    end
end

if(length(eqnarea)==6)
    everypeak = zeros(6,3);
elseif(length(eqnarea)==5)
    everypeak = zeros(5,3);
end
for i = 1 : length(eqnarea)
    everypeak(i,1) = md(i,1);
    everypeak(i,2) = eqnarea(i);
    everypeak(i,3) = peaktotalarea*md(i,2);
end
end
    
